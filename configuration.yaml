# Include necessary files
default_config:
group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

# Configure Home Assistant
homeassistant:
  allowlist_external_dirs:
    - "/tmp"

# Configure TTS
tts:
  - platform: google_translate

# Configure switches
switch:
  - platform: wake_on_lan
    mac: a8:a1:59:19:a8:db
    host: 192.168.3.32

# Configure input numbers
input_number:
  automation_run_count:
    name: Automation Run Count
    initial: 0
    min: 0
    max: 99999
    step: 1
  light_on_minutes:
    name: Total Minutes Light On
    initial: 0
    min: 0
    max: 99999
    step: 1

# Configure sensors
sensor:
  - platform: command_line
    name: AdGuard HTML Report
    command: "bash /config/scripts/adguard_report.sh"
    scan_interval: 86400  # Adjust based on how often you want the data refreshed
    value_template: "{{ value }}"

  - platform: template
    sensors:
      system_uptime:
        friendly_name: "System Uptime"
        value_template: "{{ state_attr('sensor.last_boot', 'uptime') }}"
      average_outdoor_temperature:
        friendly_name: "Average Outdoor Temperature"
        unit_of_measurement: "Â°C"
        value_template: "{{ state_attr('weather.home', 'temperature') }}"

  - platform: sql
    db_url: mysql://homeassistant:homeassistant@core-mariadb/homeassistant?charset=utf8mb4
    scan_interval: 600
    queries:
      - name: MariaDB Database Size
        query: >
          SELECT table_schema "homeassistant", 
            Round(Sum(data_length + index_length) / POWER(1024,2), 1) "value"
          FROM information_schema.tables 
          WHERE table_schema="homeassistant" 
          GROUP BY table_schema;
        column: "value"
        unit_of_measurement: MB

  - platform: influxdb
    host: a0d7b954-influxdb
    port: 8086
    username: !secret influxdb_username
    password: !secret influxdb_password
    scan_interval: 600
    queries:
      - name: InfluxDB Database Size
        unit_of_measurement: MB
        value_template: "{{ (value | float(0) / 1024 / 1024) | round(1) }}"
        group_function: sum
        measurement: '"monitor"."shard"'
        database: _internal
        where: '"database"=''homeassistant'' AND time > now() - 5m'
        field: diskBytes



mqtt:
  binary_sensor:
    - name: "DietPi Metrics Telegram Bot Health"
      state_topic: "telegrambot/health"
      payload_on: "online"
      payload_off: "offline"
      device_class: "connectivity"
      unique_id: "telegram_bot_health"
      off_delay: 60  # Adjust this (see next step)
      availability:
        - topic: "homeassistant/status"
          payload_available: "online"
          payload_not_available: "offline"

  sensor:
    - name: "Telegram Daily Message Count"
      state_topic: "telegrambot/messages"
      unique_id: "telegram_daily_message_count"
  
    - name: "DietPi CPU Usage"
      state_topic: "dietpi/system/cpu"
      unique_id: "dietpi_cpu_usage"
      device:
        identifiers: "dietpi_device"
        name: "DietPi Metrics"
      state_class: measurement

    - name: "DietPi Memory Usage"
      state_topic: "dietpi/system/memory"
      unique_id: "dietpi_memory_usage"
      device:
        identifiers: "dietpi_device"
        name: "DietPi Metrics"
      state_class: measurement

    - name: "DietPi Disk Usage"
      state_topic: "dietpi/system/disk"
      unique_id: "dietpi_disk_usage"
      value_template: "{{ value | float }}"
      unit_of_measurement: "%"
      device:
        identifiers: "dietpi_device"
        name: "DietPi Metrics"
      state_class: measurement    


# Configure InfluxDB
influxdb:
  host: a0d7b954-influxdb
  port: 8086
  database: homeassistant
  username: !secret influxdb_username
  password: !secret influxdb_password
  max_retries: 3
  default_measurement: state
  exclude:
    domains:
      - update
    entity_globs:
      - sensor.sun*
      - weather.*  
      - sensor.system_monitor_*
      - sensor.glances_*
    entities:
      - sensor.date
      - sensor.last_boot
      - sun.sun

# Configure notifications
notify:
  - name: email
    platform: smtp
    server: smtp.gmail.com
    port: 587
    timeout: 15
    sender: !secret email_sender
    encryption: starttls
    username: !secret email_username
    password: !secret email_password
    recipient:
      - !secret email_recipient
    sender_name: HASSIO

  - platform: telegram
    name: Telegram Bot
    chat_id: 1054773464

  - platform: alexa_media
    name: Alexa Group
    target:
      - media_player.master_bedroom_echo
      - media_player.downstairs_echo

  - name: group_telegram_and_email
    platform: group
    services:
      - service: email
      - service: telegram

  - name: group_alexa_and_telegram
    platform: group
    services:
      - service: alexa_media
      - service: telegram

# Configure recorder
recorder:
  db_url: mysql://homeassistant:homeassistant@core-mariadb/homeassistant?charset=utf8mb4
  commit_interval: 20
  exclude:
    domains:
      - update
    entity_globs:
      - sensor.sun*
      - weather.*  
    entities:
      - sensor.date
      - sensor.last_boot
      - sun.sun

# Configure other integrations
alexa:
  smart_home:

telegram_bot:
  - platform: polling
    api_key: !secret telegram_api_key
    allowed_chat_ids: !secret telegram_allowed_chat_ids

http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 172.30.33.0/24
    - 54.239.98.0/24
    - 54.239.99.0/24
    - 54.239.100.0/24
    - 54.239.101.0/24
    - 54.239.102.0/24
    - 54.239.103.0/24
    - 192.168.1.0/24

shell_command:
  upload_config_to_github: 'cd /config && git add . && git commit -m "Automated commit" && git push origin master'
  pushupdates_to_github: /bin/bash /config/pushupdates.sh
